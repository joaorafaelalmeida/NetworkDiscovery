package PTP;

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.MulticastSocket;
import java.net.UnknownHostException;

public class PTP implements Runnable
{
	private String ipMulticastAddress;
	private InetAddress group;
	private Type type;
	private MulticastSocket multicastSock;
	private int port;
	
	public PTP (String ipMulticastAddress, Type type, int port)
	{
		this.ipMulticastAddress = ipMulticastAddress;
		this.type = type;
		this.port = port;
		
		try 
		{
			group = InetAddress.getByName(ipMulticastAddress);
		} 
		catch (UnknownHostException e) 
		{
			// MUDAR ISTO AQUI
			e.printStackTrace();
		}
	}

	@Override
	public void run() 
	{
		if(type.equals(Type.SLAVE))
		{
	        byte[] buf = new byte[256];

	        try (MulticastSocket clientSocket = new MulticastSocket(port))
	        {
	            clientSocket.joinGroup(group);
	     
	            while (true) 
	            {
	                DatagramPacket msgPacket = new DatagramPacket(buf, buf.length);
	                clientSocket.receive(msgPacket);

	                String msg = new String(buf, 0, buf.length);
	                System.out.println("Socket 1 received msg: " + msg);
	            }
	        } 
	        catch (IOException ex) 
	        {
	            ex.printStackTrace();
	        }
		}
		
		if(type.equals(Type.MASTER))
		{
		     
	        try (DatagramSocket serverSocket = new DatagramSocket()) 
	        {
	            for (int i = 0; i < 5; i++) 
	            {
	                String msg = "Sent message no " + i;

	                DatagramPacket msgPacket = new DatagramPacket(msg.getBytes(),
	                        msg.getBytes().length, group, port);
	                serverSocket.send(msgPacket);
	     
	                System.out.println("Server sent packet with msg: " + msg);
	                Thread.sleep(500);
	            }
	        } 
	        catch (IOException ex) 
	        {
	            ex.printStackTrace();
	        } 
	        catch (InterruptedException e) 
	        {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

		}
		
	}
	
	
}
