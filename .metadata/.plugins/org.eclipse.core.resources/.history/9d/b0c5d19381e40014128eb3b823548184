package Matrix;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import Entities.Device;

public class ImportMatrix 
{
	private File file;
	private List<Device> devicesList;
	
	public ImportMatrix(File file)
	{	
		this.file = file;
		this.devicesList = getListOfDevicesFromFile(file);
	}
	
	public List<Device> getListOfDevicesFromFile(File file)
	{
		BufferedReader in;
		List<Device> tmp = new ArrayList<>();
		
		try 
		{
			in = new BufferedReader(new FileReader(file));
			String line = in.readLine();//Titulo do ficheiro
			line = in.readLine();//Numero de dispositivos
			line = in.readLine();//Dispositivos
			
			
		} 
		catch (IOException e) 
		{
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		
		
		return null;
	}
	
	public int getNumTotalDevices()
	{
		return devicesList.size();
	}
	
	public double[][] getMatrixInDoubleArray()
	{
		double[][] matrix = new double[devicesList.size()][devicesList.size()];
		
		for(int i = 0; i < devicesList.size(); i++)
			for(int j = 0; j < devicesList.size(); j++)
			{
				matrix[i][j] = devicesList.get(i).lookForDistanceByNeighbourName(devicesList.get(j).getDeviceName());
			}
		
		return matrix;
	}
}
