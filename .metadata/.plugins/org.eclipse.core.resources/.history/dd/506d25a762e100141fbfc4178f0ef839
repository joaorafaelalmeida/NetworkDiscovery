package UserInterface;



import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextField;

import java.awt.BorderLayout;
import java.awt.GridLayout;

import javax.swing.JButton;
import javax.swing.JScrollPane;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class GraphicInterface 
{
	private JFrame frame;
	private int row;
	private int columns;
	private JTextField newDeviceJTextField;

	public JFrame getFrame()
	{
		return frame;
	}

	/**
	 * Create the application.
	 */
	public GraphicInterface() 
	{
		row = 1;
		columns = 0;
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() 
	{
		//Controller control = new Controller();
		
		frame = new JFrame();
		frame.setBounds(100, 100, 600, 420);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		JPanel applicaitonPanel = new JPanel();
		frame.getContentPane().add(applicaitonPanel, BorderLayout.CENTER);
		applicaitonPanel.setLayout(null);
		
		JButton btnNovaLinha = new JButton("Add Host");
		
		
		btnNovaLinha.setBounds(10, 348, 151, 23);
		applicaitonPanel.add(btnNovaLinha);
		
		JPanel matrixPrincipalPanel = new JPanel();
		matrixPrincipalPanel.setBounds(171, 133, 403, 238);
		applicaitonPanel.add(matrixPrincipalPanel);
		matrixPrincipalPanel.setLayout(new GridLayout(1,0));
		
		JScrollPane matrixScrollPane = new JScrollPane();
		matrixPrincipalPanel.add(matrixScrollPane);
		
		JPanel matrixPanel = new JPanel();
		matrixScrollPane.setViewportView(matrixPanel);
		matrixPanel.setLayout(new GridLayout(1, 0));
		
		newDeviceJTextField = new JTextField();
		newDeviceJTextField.setBounds(10, 314, 151, 23);
		applicaitonPanel.add(newDeviceJTextField);
		newDeviceJTextField.setColumns(10);

		
		btnNovaLinha.addActionListener(new ActionListener()
		{
			
			public void actionPerformed(ActionEvent e) 
			{	
				if(validDevice(newDeviceJTextField.getText()))
				{
					newDeviceJTextField.setText("");
					matrixPanel.removeAll(); 
					row ++;
					matrixPanel.setLayout(new GridLayout(row, row));
					for(int i = 0; i<row; i++)
						if(i==0)
							matrixPanel.add(new JButton(""));
						else
							matrixPanel.add(new JButton("Host"));
					
					for(int j = 1; j<row; j++)
						for(int i = 0; i<row; i++)
						{
							if(i == 0)
								matrixPanel.add(new JButton("HostLat"));
							else
								matrixPanel.add(new JTextField());
						}
					
					matrixPanel.revalidate();
				}
				
			}
		});
	}
	
	private boolean validDevice(String text)
	{
		if(text != null)
			if(text.length()>0)
				return true;

		return false;
	}
}
